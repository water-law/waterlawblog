{"contents":[{"data":{"text":"近日，苹果公司新发布的iOS 7.0.6一度闹得沸沸扬扬，这是由于它修复了一个因goto而引起的bug。对于广大开发者来说，这个bug出现的原因以及如何避免其出现，成了热议的话题。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986161},{"data":{"text":"知名博主陈皓分享了他对于该事件的思考。他认为这可能是代码在合并过程中导致的bug，而这种bug却很难在代码审查时被发现。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986162},{"data":{"text":"前微软工程师，现就职于Github的Phil Haack在其博客中分享了他的团队是如何审查合并提交的。在此前，他们的合并流程是这样的（假设要将master分支合并到long-running-branch分支上）：","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986163},{"data":{"text":"在long-running-branch分支上创建一个新的分支：merge-master-into-long-running-branch。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986164},{"data":{"text":"在该分支上执行合并。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986165},{"data":{"text":"将该分支推送（push）到Github上。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986166},{"data":{"text":"根据该提交创建一个拉请求（pull request），请团队其他人进行审查。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986167},{"data":{"text":"在git中，这相当于执行下面的命令集：","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986168},{"data":{"text":"git checkout long-running-branch\ngit checkout -b merge-master-into-long-running-branch\ngit merge master\n# Manually do a lot of work to resolve the conflicts and commit those changes\ngit push origin merge-master-into-long-running-branch","language":"","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"code","id":45986599},{"data":{"text":"然而这样的方式可能会产生问题。Phil的同事Paul Betts指出，在将一个分支合并到另一个的时候，该合并提交的diff将显示从最后一次合并之后的所有改变。这很可能是已经审查过的代码。而我们真正想要看到的，是这次提交是否有冲突，以及如何解决这些冲突。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986174},{"data":{"text":"参与LibGit2开发的Russell Belfer给出了答案。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986175},{"data":{"text":"在将一个分支合并到另一个分支时，会在这两个分支上各创建一个合并提交。以SignalR的一次合并提交为例。该提交要将release分支合并到dev分支，该提交的SHA为cc5b002a5140e2d60184de42554a8737981c846c，以cc5b002a代替。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986176},{"data":{"text":"我们可以使用git diff命令，从两个父分支上分别查看这个合并。例如：","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986177},{"data":{"text":"git diff cc5b002a^1 cc5b002a\ngit diff cc5b002a^2 cc5b002a","language":"perl","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"code","id":45986600},{"data":{"text":"如果只想查看冲突的部分，可以使用git show命令：","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986180},{"data":{"text":"git show --cc cc5b002a","language":"","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"code","id":45986601},{"data":{"text":"git show所展示的内容，要比整个合并提交的diff少得多，因为--cc选项可以忽略没有冲突的部分，即只显示与该提交的所有父分支都不相同的部分。这样，审阅者就可以更加专注于冲突的部分，从而降低bug发生的概率。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986182},{"data":{"text":"Phil在文章最后介绍了他是如何发现这样一个合并冲突的示例的。他执行了git log --min-parents=2 -p --cc命令，从而找出了至少有两个父分支的提交。","format":{"p_indent":false,"p_center":false,"p_quote":false,"p_align":"left","p_bold":false,"t_indent":false}},"type":"paragraph","id":45986183}],"title":"观点 ：如何审查合并的提交"}